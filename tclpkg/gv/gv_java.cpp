/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.26
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */


#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/***********************************************************************
 *
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 *
 ************************************************************************/

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
#  if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#    define SWIGTEMPLATEDISAMBIGUATOR template
#  else
#    define SWIGTEMPLATEDISAMBIGUATOR 
#  endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__) || defined(__ICC)
#   define SWIGUNUSED __attribute__ ((unused)) 
# else
#   define SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods for Windows DLLs */
#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   define SWIGEXPORT
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif



/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTELC__)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" } };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else



/* some language headers (e.g. php.h, ruby.h) leave these defined */
#undef PACKAGE_STRING
#undef PACKAGE_TARNAME
#undef PACKAGE_VERSION
#undef PACKAGE_NAME

#include "gvc.h"


/** New graphs */
/*** New empty graph */
extern Agraph_t *graph(char *name);
extern Agraph_t *digraph(char *name);
extern Agraph_t *strictgraph(char *name);
extern Agraph_t *strictdigraph(char *name);
/*** New graph from a dot-syntax string or file */
extern Agraph_t *readstring(char *string);
extern Agraph_t *read(char *filename);
extern Agraph_t *read(FILE *f);	
/*** Add new subgraph to existing graph */
extern Agraph_t *graph(Agraph_t *g, char *name);

/** New nodes */
/*** Add new node to existing graph */
extern Agnode_t *node(Agraph_t *g, char *name);

/** New edges */
/*** Add new edge between existing nodes */
extern Agedge_t *edge(Agnode_t *t, Agnode_t *h);
/*** Add a new edge between an existing tail node, and a named head node which will be induced in the graph if it doesn't already exist */
extern Agedge_t *edge(Agnode_t *t, char *hname);
/*** Add a new edge between an existing head node, and a named tail node which will be induced in the graph if it doesn't already exist */
extern Agedge_t *edge(char *tname, Agnode_t *h);
/*** Add a new edge between named tail  and head nodes which will be induced in the graph if they don't already exist */
extern Agedge_t *edge(Agraph_t *g, char *tname, char *hname);

/** Setting attribute values */
/*** Set value of named attribute of graph/node/edge - creating attribute if necessary */
extern char *setv(Agraph_t *g, char *attr, char *val);
extern char *setv(Agnode_t *n, char *attr, char *val);
extern char *setv(Agedge_t *e, char *attr, char *val);

/*** Set value of existing attribute of graph/node/edge (using attribute handle) */
extern char *setv(Agraph_t *g, Agsym_t *a, char *val);
extern char *setv(Agnode_t *n, Agsym_t *a, char *val);
extern char *setv(Agedge_t *e, Agsym_t *a, char *val);

/** Getting attribute values */
/*** Get value of named attribute of graph/node/edge */
extern char *getv(Agraph_t *g, char *attr);
extern char *getv(Agnode_t *n, char *attr);
extern char *getv(Agedge_t *e, char *attr);

/*** Get value of attribute of graph/node/edge (using attribute handle) */
extern char *getv(Agraph_t *g, Agsym_t *a);
extern char *getv(Agnode_t *n, Agsym_t *a);
extern char *getv(Agedge_t *e, Agsym_t *a);

/** Obtain names from handles */
extern char *nameof(Agraph_t *g);
extern char *nameof(Agnode_t *n);
//extern char *nameof(Agedge_t *e);
extern char *nameof(Agsym_t *a);

/** Find handles from names */
extern Agraph_t *findsubg(Agraph_t *g, char *name);
extern Agnode_t *findnode(Agraph_t *g, char *name);
extern Agedge_t *findedge(Agnode_t *t, Agnode_t *h);

/** */
extern Agsym_t *findattr(Agraph_t *g, char *name);
extern Agsym_t *findattr(Agnode_t *n, char *name);
extern Agsym_t *findattr(Agedge_t *e, char *name);

/** Misc graph navigators returning handles */
extern Agnode_t *headof(Agedge_t *e);
extern Agnode_t *tailof(Agedge_t *e);
extern Agraph_t *graphof(Agraph_t *g);
extern Agraph_t *graphof(Agedge_t *e);
extern Agraph_t *graphof(Agnode_t *n);
extern Agraph_t *rootof(Agraph_t *g);

/** Obtain handles of proto node/edge for setting default attribute values */
extern Agnode_t *protonode(Agraph_t *g);
extern Agedge_t *protoedge(Agraph_t *g);

/** Iterators */
/*** Iteration termination tests */
extern bool ok(Agraph_t *g);
extern bool ok(Agnode_t *n);
extern bool ok(Agedge_t *e);
extern bool ok(Agsym_t *a);

/*** Iterate over subgraphs of a graph */
extern Agraph_t *firstsubg(Agraph_t *g);
extern Agraph_t *nextsubg(Agraph_t *g, Agraph_t *sg);

/*** Iterate over supergraphs of a graph (obscure and rarely useful) */
extern Agraph_t *firstsupg(Agraph_t *g);
extern Agraph_t *nextsupg(Agraph_t *g, Agraph_t *sg);

/*** Iterate over edges of a graph */
extern Agedge_t *firstedge(Agraph_t *g);
extern Agedge_t *nextedge(Agraph_t *g, Agedge_t *e);

/*** Iterate over outedges of a graph */
extern Agedge_t *firstout(Agraph_t *g);
extern Agedge_t *nextout(Agraph_t *g, Agedge_t *e);

/*** Iterate over edges of a node */
extern Agedge_t *firstedge(Agnode_t *n);
extern Agedge_t *nextedge(Agnode_t *n, Agedge_t *e);

/*** Iterate over out-edges of a node */
extern Agedge_t *firstout(Agnode_t *n);
extern Agedge_t *nextout(Agnode_t *n, Agedge_t *e);

/*** Iterate over head nodes reachable from out-edges of a node */
extern Agnode_t *firsthead(Agnode_t *n);
extern Agnode_t *nexthead(Agnode_t *n, Agnode_t *h);

/*** Iterate over in-edges of a graph */
extern Agedge_t *firstin(Agraph_t *g);
extern Agedge_t *nextin(Agnode_t *n, Agedge_t *e);

/*** Iterate over in-edges of a node */
extern Agedge_t *firstin(Agnode_t *n);
extern Agedge_t *nextin(Agraph_t *g, Agedge_t *e);

/*** Iterate over tail nodes reachable from in-edges of a node */
extern Agnode_t *firsttail(Agnode_t *n);
extern Agnode_t *nexttail(Agnode_t *n, Agnode_t *t);

/*** Iterate over nodes of a graph */
extern Agnode_t *firstnode(Agraph_t *g);
extern Agnode_t *nextnode(Agraph_t *g, Agnode_t *n);

/*** Iterate over nodes of an edge */
extern Agnode_t *firstnode(Agedge_t *e);
extern Agnode_t *nextnode(Agedge_t *e, Agnode_t *n);

/*** Iterate over attributes of a graph */
extern Agsym_t *firstattr(Agraph_t *g);
extern Agsym_t *nextattr(Agraph_t *g, Agsym_t *a);

/*** Iterate over attributes of an edge */
extern Agsym_t *firstattr(Agedge_t *e);
extern Agsym_t *nextattr(Agedge_t *e, Agsym_t *a);

/*** Iterate over attributes of a node */
extern Agsym_t *firstattr(Agnode_t *n);
extern Agsym_t *nextattr(Agnode_t *n, Agsym_t *a);

/** Remove graph objects */
extern void rm(Agraph_t *g);
extern void rm(Agnode_t *n);
extern void rm(Agedge_t *e);

/** Layout */
/*** Annotate a graph with layout attributes and values using a specific layout engine */
extern void layout(Agraph_t *g, char *engine);

/** Render */
/*** Render a layout into attributes of the graph */
extern void render(Agraph_t *g); 

/*** Render a layout in a specific format */
extern void render(Agraph_t *g, char *format);
extern void render(Agraph_t *g, char *format, char *filename);
extern void render(Agraph_t *g, char *format, FILE *f);
extern void render(Agraph_t *g, char *format, void **data);


#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT jlong JNICALL Java_gvJNI_graph_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    result = (Agraph_t *)graph(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_digraph(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    result = (Agraph_t *)digraph(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_strictgraph(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    result = (Agraph_t *)strictgraph(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_strictdigraph(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    result = (Agraph_t *)strictdigraph(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_readstring(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    result = (Agraph_t *)readstring(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_read_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    result = (Agraph_t *)read(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_read_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    FILE *arg1 = (FILE *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(FILE **)(void *)&jarg1; 
    result = (Agraph_t *)read(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_graph_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (Agraph_t *)graph(arg1,arg2);
    
    *(Agraph_t **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_node(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (Agnode_t *)node(arg1,arg2);
    
    *(Agnode_t **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_edge_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agnode_t *arg2 = (Agnode_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agnode_t **)(void *)&jarg2; 
    result = (Agedge_t *)edge(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_edge_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    char *arg2 = (char *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (Agedge_t *)edge(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_edge_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    char *arg1 = (char *) 0 ;
    Agnode_t *arg2 = (Agnode_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    {
        arg1 = 0;
        if (jarg1) {
            arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
            if (!arg1) return 0;
        }
    }
    arg2 = *(Agnode_t **)(void *)&jarg2; 
    result = (Agedge_t *)edge(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    {
        if (arg1) jenv->ReleaseStringUTFChars(jarg1, arg1); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_edge_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    result = (Agedge_t *)edge(arg1,arg2,arg3);
    
    *(Agedge_t **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_setv_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3) {
    jstring jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    result = (char *)setv(arg1,arg2,arg3);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_setv_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3) {
    jstring jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    result = (char *)setv(arg1,arg2,arg3);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_setv_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3) {
    jstring jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    result = (char *)setv(arg1,arg2,arg3);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_setv_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3) {
    jstring jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agsym_t *arg2 = (Agsym_t *) 0 ;
    char *arg3 = (char *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    arg2 = *(Agsym_t **)(void *)&jarg2; 
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    result = (char *)setv(arg1,arg2,arg3);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_setv_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3) {
    jstring jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agsym_t *arg2 = (Agsym_t *) 0 ;
    char *arg3 = (char *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agsym_t **)(void *)&jarg2; 
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    result = (char *)setv(arg1,arg2,arg3);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_setv_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3) {
    jstring jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    Agsym_t *arg2 = (Agsym_t *) 0 ;
    char *arg3 = (char *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    arg2 = *(Agsym_t **)(void *)&jarg2; 
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return 0;
        }
    }
    result = (char *)setv(arg1,arg2,arg3);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_getv_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jstring jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (char *)getv(arg1,arg2);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_getv_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jstring jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    char *arg2 = (char *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (char *)getv(arg1,arg2);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_getv_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jstring jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    char *arg2 = (char *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (char *)getv(arg1,arg2);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_getv_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jstring jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agsym_t *arg2 = (Agsym_t *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    arg2 = *(Agsym_t **)(void *)&jarg2; 
    result = (char *)getv(arg1,arg2);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_getv_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jstring jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agsym_t *arg2 = (Agsym_t *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agsym_t **)(void *)&jarg2; 
    result = (char *)getv(arg1,arg2);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_getv_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jstring jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    Agsym_t *arg2 = (Agsym_t *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    arg2 = *(Agsym_t **)(void *)&jarg2; 
    result = (char *)getv(arg1,arg2);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_nameof_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (char *)nameof(arg1);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_nameof_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    result = (char *)nameof(arg1);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


JNIEXPORT jstring JNICALL Java_gvJNI_nameof_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jstring jresult = 0 ;
    Agsym_t *arg1 = (Agsym_t *) 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agsym_t **)(void *)&jarg1; 
    result = (char *)nameof(arg1);
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_findsubg(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (Agraph_t *)findsubg(arg1,arg2);
    
    *(Agraph_t **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_findnode(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (Agnode_t *)findnode(arg1,arg2);
    
    *(Agnode_t **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_findedge(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agnode_t *arg2 = (Agnode_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agnode_t **)(void *)&jarg2; 
    result = (Agedge_t *)findedge(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_findattr_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    Agsym_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (Agsym_t *)findattr(arg1,arg2);
    
    *(Agsym_t **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_findattr_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    char *arg2 = (char *) 0 ;
    Agsym_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (Agsym_t *)findattr(arg1,arg2);
    
    *(Agsym_t **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_findattr_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    jlong jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    char *arg2 = (char *) 0 ;
    Agsym_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return 0;
        }
    }
    result = (Agsym_t *)findattr(arg1,arg2);
    
    *(Agsym_t **)(void *)&jresult = result; 
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_headof(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    result = (Agnode_t *)headof(arg1);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_tailof(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    result = (Agnode_t *)tailof(arg1);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_graphof_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agraph_t *)graphof(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_graphof_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    result = (Agraph_t *)graphof(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_graphof_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    result = (Agraph_t *)graphof(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_rootof(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agraph_t *)rootof(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_protonode(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agnode_t *)protonode(arg1);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_protoedge(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agedge_t *)protoedge(arg1);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jboolean JNICALL Java_gvJNI_ok_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    bool result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (bool)ok(arg1);
    
    jresult = (jboolean)result; 
    return jresult;
}


JNIEXPORT jboolean JNICALL Java_gvJNI_ok_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    bool result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    result = (bool)ok(arg1);
    
    jresult = (jboolean)result; 
    return jresult;
}


JNIEXPORT jboolean JNICALL Java_gvJNI_ok_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    bool result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    result = (bool)ok(arg1);
    
    jresult = (jboolean)result; 
    return jresult;
}


JNIEXPORT jboolean JNICALL Java_gvJNI_ok_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jboolean jresult = 0 ;
    Agsym_t *arg1 = (Agsym_t *) 0 ;
    bool result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agsym_t **)(void *)&jarg1; 
    result = (bool)ok(arg1);
    
    jresult = (jboolean)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstsubg(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agraph_t *)firstsubg(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextsubg(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agraph_t *arg2 = (Agraph_t *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    arg2 = *(Agraph_t **)(void *)&jarg2; 
    result = (Agraph_t *)nextsubg(arg1,arg2);
    
    *(Agraph_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstsupg(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agraph_t *)firstsupg(arg1);
    
    *(Agraph_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextsupg(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agraph_t *arg2 = (Agraph_t *) 0 ;
    Agraph_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    arg2 = *(Agraph_t **)(void *)&jarg2; 
    result = (Agraph_t *)nextsupg(arg1,arg2);
    
    *(Agraph_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstedge_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agedge_t *)firstedge(arg1);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextedge_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agedge_t *arg2 = (Agedge_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    arg2 = *(Agedge_t **)(void *)&jarg2; 
    result = (Agedge_t *)nextedge(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstout_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agedge_t *)firstout(arg1);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextout_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agedge_t *arg2 = (Agedge_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    arg2 = *(Agedge_t **)(void *)&jarg2; 
    result = (Agedge_t *)nextout(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstedge_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    result = (Agedge_t *)firstedge(arg1);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextedge_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agedge_t *arg2 = (Agedge_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agedge_t **)(void *)&jarg2; 
    result = (Agedge_t *)nextedge(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstout_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    result = (Agedge_t *)firstout(arg1);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextout_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agedge_t *arg2 = (Agedge_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agedge_t **)(void *)&jarg2; 
    result = (Agedge_t *)nextout(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firsthead(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    result = (Agnode_t *)firsthead(arg1);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nexthead(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agnode_t *arg2 = (Agnode_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agnode_t **)(void *)&jarg2; 
    result = (Agnode_t *)nexthead(arg1,arg2);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstin_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agedge_t *)firstin(arg1);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextin_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agedge_t *arg2 = (Agedge_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agedge_t **)(void *)&jarg2; 
    result = (Agedge_t *)nextin(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstin_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    result = (Agedge_t *)firstin(arg1);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextin_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agedge_t *arg2 = (Agedge_t *) 0 ;
    Agedge_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    arg2 = *(Agedge_t **)(void *)&jarg2; 
    result = (Agedge_t *)nextin(arg1,arg2);
    
    *(Agedge_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firsttail(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    result = (Agnode_t *)firsttail(arg1);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nexttail(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agnode_t *arg2 = (Agnode_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agnode_t **)(void *)&jarg2; 
    result = (Agnode_t *)nexttail(arg1,arg2);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstnode_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agnode_t *)firstnode(arg1);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextnode_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agnode_t *arg2 = (Agnode_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    arg2 = *(Agnode_t **)(void *)&jarg2; 
    result = (Agnode_t *)nextnode(arg1,arg2);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstnode_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    result = (Agnode_t *)firstnode(arg1);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextnode_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    Agnode_t *arg2 = (Agnode_t *) 0 ;
    Agnode_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    arg2 = *(Agnode_t **)(void *)&jarg2; 
    result = (Agnode_t *)nextnode(arg1,arg2);
    
    *(Agnode_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstattr_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agsym_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    result = (Agsym_t *)firstattr(arg1);
    
    *(Agsym_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextattr_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    Agsym_t *arg2 = (Agsym_t *) 0 ;
    Agsym_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    arg2 = *(Agsym_t **)(void *)&jarg2; 
    result = (Agsym_t *)nextattr(arg1,arg2);
    
    *(Agsym_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstattr_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    Agsym_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    result = (Agsym_t *)firstattr(arg1);
    
    *(Agsym_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextattr_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    Agsym_t *arg2 = (Agsym_t *) 0 ;
    Agsym_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    arg2 = *(Agsym_t **)(void *)&jarg2; 
    result = (Agsym_t *)nextattr(arg1,arg2);
    
    *(Agsym_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_firstattr_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agsym_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    result = (Agsym_t *)firstattr(arg1);
    
    *(Agsym_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_gvJNI_nextattr_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    Agsym_t *arg2 = (Agsym_t *) 0 ;
    Agsym_t *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    arg2 = *(Agsym_t **)(void *)&jarg2; 
    result = (Agsym_t *)nextattr(arg1,arg2);
    
    *(Agsym_t **)(void *)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_gvJNI_rm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    rm(arg1);
    
}


JNIEXPORT void JNICALL Java_gvJNI_rm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    Agnode_t *arg1 = (Agnode_t *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agnode_t **)(void *)&jarg1; 
    rm(arg1);
    
}


JNIEXPORT void JNICALL Java_gvJNI_rm_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    Agedge_t *arg1 = (Agedge_t *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agedge_t **)(void *)&jarg1; 
    rm(arg1);
    
}


JNIEXPORT void JNICALL Java_gvJNI_layout(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    layout(arg1,arg2);
    
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


JNIEXPORT void JNICALL Java_gvJNI_render_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    render(arg1);
    
}


JNIEXPORT void JNICALL Java_gvJNI_render_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    render(arg1,arg2);
    
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


JNIEXPORT void JNICALL Java_gvJNI_render_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jstring jarg3) {
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    {
        arg3 = 0;
        if (jarg3) {
            arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
            if (!arg3) return ;
        }
    }
    render(arg1,arg2,arg3);
    
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
    {
        if (arg3) jenv->ReleaseStringUTFChars(jarg3, arg3); 
    }
}


JNIEXPORT void JNICALL Java_gvJNI_render_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3) {
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    FILE *arg3 = (FILE *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    arg3 = *(FILE **)(void *)&jarg3; 
    render(arg1,arg2,arg3);
    
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


JNIEXPORT void JNICALL Java_gvJNI_render_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3) {
    Agraph_t *arg1 = (Agraph_t *) 0 ;
    char *arg2 = (char *) 0 ;
    void **arg3 = (void **) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(Agraph_t **)(void *)&jarg1; 
    {
        arg2 = 0;
        if (jarg2) {
            arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
            if (!arg2) return ;
        }
    }
    arg3 = *(void ***)(void *)&jarg3; 
    render(arg1,arg2,arg3);
    
    {
        if (arg2) jenv->ReleaseStringUTFChars(jarg2, arg2); 
    }
}


#ifdef __cplusplus
}
#endif

